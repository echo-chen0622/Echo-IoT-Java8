<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.echoiot</groupId>
        <version>1.0.0</version>
        <artifactId>msa</artifactId>
    </parent>
    <groupId>org.echoiot.msa</groupId>
    <artifactId>black-box-tests</artifactId>

    <name>Echoiot Black Box Tests</name>
    <description>Project for Echoiot black box testing with using Docker</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <main.dir>${basedir}/../..</main.dir>
        <suite>connectivity</suite>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.zeroturnaround</groupId>
            <artifactId>zt-exec</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.java-websocket</groupId>
            <artifactId>Java-WebSocket</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.californium</groupId>
            <artifactId>californium-core</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>org.echoiot</groupId>
            <artifactId>netty-mqtt</artifactId>
        </dependency>
        <dependency>
            <groupId>org.echoiot</groupId>
            <artifactId>tools</artifactId>
        </dependency>
        <dependency>
            <groupId>org.echoiot</groupId>
            <artifactId>rest-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.echoiot.msa</groupId>
            <artifactId>js-executor</artifactId>
            <type>docker-info</type>
        </dependency>
        <dependency>
            <groupId>org.echoiot.msa</groupId>
            <artifactId>web-ui</artifactId>
            <type>docker-info</type>
        </dependency>
        <dependency>
            <groupId>org.echoiot.msa</groupId>
            <artifactId>tb-node</artifactId>
            <type>docker-info</type>
        </dependency>
        <dependency>
            <groupId>org.echoiot.msa.transport</groupId>
            <artifactId>coap</artifactId>
            <type>docker-info</type>
        </dependency>
        <dependency>
            <groupId>org.echoiot.msa.transport</groupId>
            <artifactId>http</artifactId>
            <type>docker-info</type>
        </dependency>
        <dependency>
            <groupId>org.echoiot.msa.transport</groupId>
            <artifactId>mqtt</artifactId>
            <type>docker-info</type>
        </dependency>
        <dependency>
            <groupId>org.echoiot.msa.transport</groupId>
            <artifactId>lwm2m</artifactId>
            <type>docker-info</type>
        </dependency>
        <dependency>
            <groupId>org.echoiot.msa.transport</groupId>
            <artifactId>snmp</artifactId>
            <type>docker-info</type>
        </dependency>
        <dependency>
            <groupId>org.echoiot.common</groupId>
            <artifactId>message</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.github.bonigarcia</groupId>
            <artifactId>webdrivermanager</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-testng</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <suiteXmlFiles>
                        <suiteXmlFile>src/test/resources/${suite}.xml</suiteXmlFile>
                    </suiteXmlFiles>
                    <skipTests>${blackBoxTests.skip}</skipTests>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-testng</artifactId>
                        <version>${surefire.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>io.qameta.allure</groupId>
                <artifactId>allure-maven</artifactId>
                <version>${allure-maven.version}</version>
                <configuration>
                    <reportVersion>${allure-testng.version}</reportVersion>
                    <allureDownloadUrl>https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/
                        ${allure-testng.version}/allure-commandline-${allure-testng.version}.zip</allureDownloadUrl>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
